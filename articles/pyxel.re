= Pyxelってなに？

//lead{
この章では、ゲーム開発ツール「Pyxel（ピクセル）」について学びます。
//}

== ゲームエンジンとは

ゲームを作るときには、画面に絵を表示したり、音を鳴らしたり、キーボードやマウスの操作を受け付けたりする必要があります。これらの機能をゼロから作るのは、とても大変な作業です。

そこで役立つのが「ゲームエンジン」です。ゲームエンジンは、ゲーム開発に必要な基本的な機能をまとめたツールで、これを使うことで簡単にゲームを作ることができます。

//image[game_engine][ゲームエンジンのイメージ]{
//}

== Pyxelとは

Pyxel（ピクセル）は、Python用のレトロゲームエンジンです。「レトロ」とは、昔ながらの古いスタイルという意味です。1980年代のファミコンやゲームボーイのような、ドット絵（小さな四角い点の集まりで作る絵）を使ったゲームを簡単に作ることができます。

//image[pyxel_logo][Pyxelのロゴ]{
//}

Pyxelは日本人の方が作ったツールで、世界中で使われています。公式サイトは https://github.com/kitao/pyxel です。

== Pyxelの特徴

Pyxelには、次のような特徴があります。

 * シンプルなプログラムでゲームが作れる
 * レトロな見た目のゲームが作れる
 * 画像、音、音楽を簡単に扱える
 * Windows、Mac、Linuxで動作する
 * 日本語のドキュメントがある

== Pyxelでできるゲーム

Pyxelを使うと、次のようなゲームを作ることができます。

 * アクションゲーム
 * シューティングゲーム
 * パズルゲーム
 * RPG（ロールプレイングゲーム）

//image[pyxel_games][Pyxelで作れるゲームの例]{
//}

== Pyxelの画面

Pyxelでは、画面の大きさや色の数が制限されています。これは、昔のゲーム機と同じような制約を再現しているからです。

 * 画面の大きさ：最大256×256ドット
 * 使える色：16色まで

この制限があることで、かえって作りやすくなる面もあります。選択肢が少ないので、迷わずに済むからです。

== Pyxelのサンプルコード

Pyxelを使ったプログラムがどんな感じか、簡単な例を見てみましょう。

//list[pyxel_example][簡単なPyxelプログラム][python]{
import pyxel

# Pyxelを初期化
pyxel.init(160, 120, title="はじめてのPyxel")

# 画面を更新する関数
def update():
    # ESCキーが押されたら終了
    if pyxel.btnp(pyxel.KEY_ESCAPE):
        pyxel.quit()

# 画面を描画する関数
def draw():
    # 画面を消去
    pyxel.cls(0)
    # 文字を表示
    pyxel.text(55, 55, "Hello, Pyxel!", 7)

# Pyxelの実行
pyxel.run(update, draw)
//}

このプログラムは、黒い画面に「Hello, Pyxel!」という文字を表示します。

 * `import pyxel`：Pyxelを使うための準備
 * `pyxel.init(160, 120)`：160×120ドットの画面を作る
 * `update`関数：ゲームの状態を更新する（キー入力など）
 * `draw`関数：画面に絵を描く
 * `pyxel.run`：ゲームを実行する

== まとめ

この章では、Pyxelについて学びました。

 * Pyxelは、レトロゲームを作るためのツール
 * シンプルな命令でゲームが作れる
 * 画面サイズや色数に制限がある
 * 様々な種類のゲームが作れる

次の章では、PyxelとPythonをパソコンにインストールする方法を学びます。

== チャレンジ問題

1. 昔のゲーム機（ファミコン、ゲームボーイなど）で遊んだことがありますか？どんなゲームが好きでしたか？

2. Pyxelで作ってみたいゲームを考えてみよう。どんなゲームを作りたいですか？